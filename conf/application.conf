# This is the main configuration file for the application.
# ~~~~~
application.name=com.shovesoft.spay

# Application mode
# ~~~~~
# Set to dev to enable instant reloading and other development help.
# Otherwise set to prod.
application.mode=dev
%dev.application.mode=prod
%test.application.mode=prod
%prod.application.mode=prod

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions
# If you deploy your application to several instances be sure to use the same key !
application.secret=ENcSuwQjVTo7pFZzY1WjdJlxNajo52Y5Xi3raBkMqPj8gXbj2zicujYLLwsFRpce
fixed.secret=Xco1tY5CDlhh5qFCDKb1uuKB42RmSk4u
# 数据库备份文件路径
sql.path=/home/backup-file-mysql/
# i18n
# ~~~~~
# Define locales used by your application.
# You can then place localized messages in conf/messages.{locale} files
# application.langs=fr,en,ja

# Date format
# ~~~~~
date.format=yyyy-MM-dd
# date.format.fr=dd/MM/yyyy

# Server configuration
# ~~~~~
# If you need to change the HTTP port, uncomment this (default is set to 9000)
 http.port=9001
#
# By default the server listen for HTTP on the wilcard address.
# You can restrict this.
# http.address=127.0.0.1
#
# Use this if you don't host your Play application at the root of the domain
# you're serving it from. This parameter has no effect when deployed as a
# war, because the path will be handled by the application server.
 http.path=

# Session configuration
# ~~~~~~~~~~~~~~~~~~~~~~
# By default, session will be written to the transient PLAY_SESSION cookie.
# The cookies are not secured by default, only set it to true
# if you're serving your pages through https.
 application.session.cookie=SPAY
# application.session.maxAge=1h
# application.session.secure=true
  application.session.httpOnly=true

# Session/Cookie sharing between subdomain
# ~~~~~~~~~~~~~~~~~~~~~~
# By default a cookie is only valid for a specific domain. By setting
# application.defaultCookieDomain to '.example.com', the cookies
# will be valid for all domains ending with '.example.com', ie:
# foo.example.com and bar.example.com
# application.defaultCookieDomain=.example.com

# JVM configuration
# ~~~~~
# Define which port is used by JPDA when application is in debug mode (default is set to 8000)
# jpda.port=8000
#
# Java source level => 1.5, 1.6 or 1.7 (experimental)
# java.source=1.5

# Log level
# ~~~~~
# Specify log level for your application.
# If you want a very customized log, create a log4j.properties file in the conf directory
# application.log=INFO
#
# More logging configuration
application.log.path=/log4j.properties
# application.log.system.out=off

# Database configuration
# ~~~~~ 
# Enable a database engine if needed.
#
# To quickly set up a development database, use either:
#   - mem : for a transient in memory database (H2 in memory)
#   - fs  : for a simple file written database (H2 file stored)
# db=mem
#
# To connect to a local MySQL5 database, use:
#db=shove-dbpnx9C00MM0PRLrUowojld/gMJwhaEWRAlmqQTpyL4nfyNSAeSho5VdY7/hGBi+ZosiE2CxECO0DdKL4ei9b0ZvF8IQheGlNDpF3Qd4GL5mg=
db=mysql://xfp2p_dev_user:xfp2p_dev_user@jefferson.dev/spay_dev
%local.db=mysql://xfp2p_dev_user:xfp2p_dev_user@jefferson.dev/spay_dev
%dev.db=mysql://xfp2p_dev_user:xfp2p_dev_user@jefferson.dev/spay_dev
%test.db=mysql://user_dev:userdev-@y2internal.mysql.rds.aliyuncs.com/spay


#
# To connect to a local PostgreSQL9 database, use:
# db=postgres://user:pwd@host/database
#
# If you need a full JDBC configuration use the following :
# db.url=jdbc:postgresql:database_name
# db.driver=org.postgresql.Driver
# db.user=root
# db.pass=secret
#
# Connections pool configuration :
# db.pool.timeout=1000
# db.pool.maxSize=30
# db.pool.minSize=10
#
# If you want to reuse an existing Datasource from your application server, use:
# db=java:/comp/env/jdbc/myDatasource
#
# When using an existing Datasource, it's sometimes needed to destroy it when
# the application is stopped. Depending on the datasource, you can define a
# generic "destroy" method :
# db.destroyMethod=close

# JPA Configuration (Hibernate)
# ~~~~~
#
# Specify the custom JPA dialect to use here (default to guess):
# jpa.dialect=org.hibernate.dialect.PostgreSQLDialect
#
# Specify the ddl generation pattern to use. Set to none to disable it 
# (default to update in DEV mode, and none in PROD mode):
 jpa.ddl=none
#
# Debug SQL statements (logged using DEBUG level):
# jpa.debugSQL=true
#
# You can even specify additional hibernate properties here:
# hibernate.use_sql_comments=true
# ...
#
# Store path for Blob content
attachments.path=data/attachments

# Memcached configuration
# ~~~~~ 
# Enable memcached if needed. Otherwise a local cache is used.
# memcached=enabled
#
# Specify memcached host (default to 127.0.0.1:11211)
# memcached.host=127.0.0.1:11211
#
# Or you can specify multiple host to build a distributed cache
# memcached.1.host=127.0.0.1:11211
# memcached.2.host=127.0.0.1:11212
#
# Use plain SASL to authenticate for memcached
# memcached.user=
# memcached.password=

# HTTP Response headers control for static files
# ~~~~~
# Set the default max-age, telling the user's browser how long it should cache the page.
# Default is 3600 (one hour). Set it to 0 to send no-cache.
# This is only read in prod mode, in dev mode the cache is disabled.
# http.cacheControl=3600

# If enabled, Play will generate entity tags automatically and send a 304 when needed.
# Default is true, set it to false to deactivate use of entity tags.
# http.useETag=true

# Custom mime types
# mimetype.xpi=application/x-xpinstall

# WS configuration
# ~~~~~
# Default engine is Async Http Client, uncomment to use
# the JDK's internal implementation
# webservice = urlfetch
# If you need to set proxy params for WS requests
# http.proxyHost = localhost
# http.proxyPort = 3128
# http.proxyUser = jojo
# http.proxyPassword = jojo

# Mail configuration
# ~~~~~ 
# Default is to use a mock Mailer
mail.smtp=mock

# Or, specify mail host configuration
 mail.smtp.host=mail.eims.com.cn
 mail.smtp.user=chenpi@eims.com.cn
 mail.smtp.pass=123
 mail.smtp.channel=clear

# Url-resolving in Jobs
# ~~~~~~
# When rendering templates with reverse-url-resoling (@@{..}) in Jobs (which do not have an inbound Http.Request),
# ie if sending a HtmlMail, Play need to know which url your users use when accessing your app.

# test.application.baseUrl=http://172.16.13.65:9000/
test.application.baseUrl=http://localhost:9001/
# test.application.baseUrl=http://172.16.13.61:9000
# %prod.application.baseUrl=http://www.yourdomain.com/

# Jobs executor
# ~~~~~~
# Size of the Jobs pool
# play.jobs.pool=10

# Execution pool
# ~~~~~
# Default to 1 thread in DEV mode or (nb processors + 1) threads in PROD mode.
# Try to keep a low as possible. 1 thread will serialize all requests (very useful for debugging purpose)
# play.pool=3

# Open file from errors pages
# ~~~~~
# If your text editor supports opening files by URL, Play! will
# dynamically link error pages to files 
#
# Example, for textmate:
# play.editor=txmt://open?url=file://%s&line=%s

# Testing. Set up a custom configuration for test mode
# ~~~~~
#%test.module.cobertura=${play.path}/modules/cobertura
#%test.application.mode=dev
#%test.db.url=jdbc:h2:mem:play;MODE=MYSQL;LOCK_MODE=0
#%test.jpa.ddl=create
#%test.mail.smtp=mock
# 以下内容，请增加到 play 框架项目的 application.conf 中

# 是否启动拦截器，default is true
 injectionInterceptor=true
# 截获到注入等风险后，转跳到的目标 url
# injectionInterceptor.alert.url=

# 各 Controller 的例外级别，0-最严格；1-严格；2-直接放行，default is 0. 例如：
# SupervisorBidManage=2
# UserQuery=1
PNR.PNRPayment = 2
# SupervisorBidManage、UserQuery 为需要配置例外的控制器的类名。不配置的则为 0，为最严格规则。
# 控制器的第一个方法请 Copy 如下代码：

#	@Before
#	private static void injectionInterceptor() throws Exception {
#		new com.shove.web.security.InjectionInterceptor().run();
#	}

#	这个方法返回一个字符串，可以对串的值进行判断，如果返回 null, 说明是 ajax 请求，如果是 ""，则说明无拦截到内容，如果有内容，则是拦截到的内容提示。



#汇付天下配置
chinapnrconfigpath=/conf/chinapnr.properties
%local.chinapnrconfigpath=/conf/chinapnr-local.properties
%dev.chinapnrconfigpath=/conf/chinapnr.properties
%test.chinapnrconfigpath=/conf/chinapnr-test.properties

#app user-agent 包含此字段视为app 原生应用
app.agent.names=jindoujialicai;jiaxinmao


#金通
jintong.service.url=https://220.155.1.60:19091/NPGW10001.srv
jintong.privateKey=/public/631000000000001_pri.key
jintong.pubKey=/public/631000000000000_pub.key
jintong.deductRealPay.serviceCode=NCPS0002
jintong.deductRealPayee.serviceCode=NCPS0001
jintong.accountValidate.serviceCode=NCPS0010

